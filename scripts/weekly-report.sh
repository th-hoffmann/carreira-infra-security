#!/usr/bin/env bash

# ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
# ‚ïë  ‚ö° weekly-report.sh
# ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
# 
# ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
# ‚ïë üìã INFORMA√á√ïES DO SCRIPT
# ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
# 
#   üìÑ Descri√ß√£o.....: Este script gera um relat√≥rio semanal de progresso
#    baseado nas issues do GitHub, fornecendo uma vis√£o geral do status
#    das atividades em andamento.
#
#   üë®‚Äçüíª Desenvolvedor.: Thiago Hoffmann
#   üìÆ Contato.......: thiago@hoffmann.tec.br
#   üîó GitHub........: https://github.com/th-hoffmann
#   üåê LinkedIn......: https://linkedin.com/in/th-hoffmann87
#   
#   üìÖ Data..........: 20/07/2025
#   üè∑Ô∏è  Vers√£o.......: 1.0.0
# 
# ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
# ‚ïë üöÄ MODO DE USO
# ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
# 
#   Executar:    ./weekly-report.sh
#
#
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

set -e

# Configura√ß√µes
REPO_OWNER="th-hoffmann"
REPO_NAME="carreira-infra-security"
DATE=$(date '+%d/%m/%Y')
WEEK_START=$(date -d 'monday-7 days' '+%Y-%m-%d')
WEEK_END=$(date -d 'sunday-7 days' '+%Y-%m-%d')

echo "üìä Gerando Relat√≥rio Semanal de Progresso"
echo "Per√≠odo: $WEEK_START a $WEEK_END"
echo "Data do relat√≥rio: $DATE"
echo ""

# Fun√ß√£o para contar issues por label
count_issues_by_label() {
    local label="$1"
    local state="$2"
    gh issue list --label "$label" --state "$state" --json number | jq length
}

# Fun√ß√£o para calcular progresso
calculate_progress() {
    local total="$1"
    local completed="$2"
    if [ "$total" -eq 0 ]; then
        echo "0"
    else
        echo "scale=0; $completed * 100 / $total" | bc
    fi
}

echo "## üìà Resumo da Semana"
echo ""

# Contadores gerais
TOTAL_ISSUES=$(gh issue list --state all --json number | jq length)
CLOSED_ISSUES=$(gh issue list --state closed --json number | jq length)
OPEN_ISSUES=$(gh issue list --state open --json number | jq length)

echo "### üìã Status Geral"
echo "- **Total de Issues**: $TOTAL_ISSUES"
echo "- **Issues Abertas**: $OPEN_ISSUES"  
echo "- **Issues Fechadas**: $CLOSED_ISSUES"
echo "- **Taxa de Conclus√£o**: $(calculate_progress $TOTAL_ISSUES $CLOSED_ISSUES)%"
echo ""

# Progresso por categoria
echo "### üìä Progresso por Categoria"

# Acad√™mico
ACADEMIC_TOTAL=$(count_issues_by_label "üìö acad√™mico" "all")
ACADEMIC_DONE=$(count_issues_by_label "üìö acad√™mico" "closed")
ACADEMIC_PROGRESS=$(calculate_progress $ACADEMIC_TOTAL $ACADEMIC_DONE)

echo "- **üìö Acad√™mico**: $ACADEMIC_DONE/$ACADEMIC_TOTAL ($ACADEMIC_PROGRESS%)"

# Certifica√ß√µes
CERT_TOTAL=$(count_issues_by_label "üéì certifica√ß√£o" "all")
CERT_DONE=$(count_issues_by_label "üéì certifica√ß√£o" "closed")
CERT_PROGRESS=$(calculate_progress $CERT_TOTAL $CERT_DONE)

echo "- **üéì Certifica√ß√µes**: $CERT_DONE/$CERT_TOTAL ($CERT_PROGRESS%)"

# Projetos
PROJECT_TOTAL=$(count_issues_by_label "üöÄ projeto" "all")
PROJECT_DONE=$(count_issues_by_label "üöÄ projeto" "closed")
PROJECT_PROGRESS=$(calculate_progress $PROJECT_TOTAL $PROJECT_DONE)

echo "- **üöÄ Projetos**: $PROJECT_DONE/$PROJECT_TOTAL ($PROJECT_PROGRESS%)"

# Metas
META_TOTAL=$(count_issues_by_label "üéØ meta" "all")  
META_DONE=$(count_issues_by_label "üéØ meta" "closed")
META_PROGRESS=$(calculate_progress $META_TOTAL $META_DONE)

echo "- **üéØ Metas**: $META_DONE/$META_TOTAL ($META_PROGRESS%)"
echo ""

# Issues fechadas na semana
echo "### ‚úÖ Conquistas da Semana"
CLOSED_THIS_WEEK=$(gh issue list --state closed --search "closed:>=$WEEK_START" --json number,title | jq length)

if [ "$CLOSED_THIS_WEEK" -gt 0 ]; then
    echo "**$CLOSED_THIS_WEEK issues conclu√≠das:**"
    gh issue list --state closed --search "closed:>=$WEEK_START" --json number,title | jq -r '.[] | "- #\(.number): \(.title)"'
else
    echo "- Nenhuma issue foi conclu√≠da nesta semana"
fi
echo ""

# Issues criadas na semana
echo "### üÜï Novos Itens Planejados"
CREATED_THIS_WEEK=$(gh issue list --search "created:>=$WEEK_START" --json number | jq length)

if [ "$CREATED_THIS_WEEK" -gt 0 ]; then
    echo "**$CREATED_THIS_WEEK novas issues criadas:**"
    gh issue list --search "created:>=$WEEK_START" --json number,title | jq -r '.[] | "- #\(.number): \(.title)"'
else
    echo "- Nenhuma nova issue foi criada nesta semana"
fi
echo ""

# Pr√≥ximos deadlines
echo "### ‚è∞ Pr√≥ximos Prazos"
echo "Issues com deadline nos pr√≥ximos 7 dias:"

# Aqui voc√™ pode adicionar l√≥gica para verificar issues com datas pr√≥ximas
# Isso dependeria de como voc√™ armazena as datas (custom fields, milestones, etc.)

gh issue list --state open --json number,title,labels | jq -r '.[] | select(.labels[]?.name | test("urgent|deadline")) | "- #\(.number): \(.title)"' || echo "- Nenhum prazo urgente identificado"

echo ""
echo "---"
echo "*Relat√≥rio gerado automaticamente em $DATE*"
echo "*Pr√≥ximo relat√≥rio: $(date -d '+7 days' '+%d/%m/%Y')*"
